root:
    obstacle_avoid:
        input: "'obstacle_avoid_topics.bag'"
        output: ['astar_path','safety_waypoints','astar_debug_poses','astar_footprint']
    velocity_set:
        input: "'velocity_set_topics.bag'"
        output: ['detection_range','obstacle','obstacle_waypoint','astar/final_waypoints','final_waypoints']
    way_planner:
        input: "'way_planner_topics.bag'"
        output: ['lane_waypoints_array','global_waypoints_rviz','Global_StartPoint_rviz','Global_GoalPoints_rviz','Goal_Nodes_Points_rviz','vector_map_center_lines_rviz','Traffic_Lights_rviz']
    decision_maker_node:
        input: "'decision_maker_node_topics.bag'"
        output: ['state/stopline_wpidx','state','lane_waypoints_array','decisionmaker/states','light_color_managed','lamp_cmd','decision_maker/state_overlay','state/cross_road_marker','state/cross_inside_marker','state/crossroad_bbox','state/detection_area','state/stopline_target','target_velocity_array','state/val_diff_distance','state/exectime']
    waypoint_clicker:
        input: "'waypoint_clicker_topics.bag'"
        output: ['waypoint_guide']
    waypoint_loader:
        input: "'waypoint_loader_topics.bag'"
        output: ['based/lane_waypoint_raw']
    waypoint_replanner:
        input: "'waypoint_replanner_topics.bag'"
        output: ['based/lane_waypoint_array','lane_waypoints_array']
    waypoints_marker_publisher:
        input: "'waypoints_marker_publisher_topics.bag'"
        output: ['local_waypoints_mark','global_waypoints_mark']
    waypoint_saver:
        input: "'waypoint_saver_topics.bag'"
        output: ['waypoint_saver_marker']
    waypoint_velocity_visualizer:
        input: "'waypoint_velocity_visualizer_topics.bag'"
        output: ['waypoints_velocity']
    lane_navi:
        input: "'lane_navi_topics.bag'"
        output: ['lane_waypoints_array']
    lane_rule:
        input: "'lane_rule_topics.bag'"
        output: ['traffic_waypoints_array','red_waypoints_array','green_waypoints_array']
    lane_select:
        input: "'lane_select_topics.bag'"
        output: ['base_waypoints','closest_waypoint']
    lane_stop:
        input: "'lane_stop_topics.bag'"
        output: ['traffic_waypoints_array']
    ff_waypoint_follower:
        input: "'ff_waypoint_follower_topics.bag'"
        output: ['twist_raw','wf_stat','curr_simu_pose','follow_pose','sim_pose','sim_velocity','twist_cmd','ControlBoxOdom','linear_velocity_viz']
    op_trajectory_generator:
        input: "'op_trajectory_generator_topics.bag'"
        output: ['final_waypoints','base_waypoints','local_trajectories']
    lattice_trajectry_gen:
        input: "'lattice_trajectry_gen_topics.bag'"
        output: ['next_waypoint_mark','wf_stat','spline','state','cubic_splines_viz']
    command_converter:
        input: "'command_converter_topics.bag'"
        output: ['twist_raw']
    lattice_velocity_set:
        input: "'lattice_velocity_set_topics.bag'"
        output: ['detection_range','sound_player','temporal_waypoints','closest_waypoint','obstacle']
    path_select:
        input: "'path_select_topics.bag'"
        output: ['final_waypoints']
    astar_navi:
        input: "'astar_navi_topics.bag'"
        output: ['astar_path','lane_waypoints_array','debug_pose_array']
    op_data_logger:
        input: "'op_data_logger_topics.bag'"
        output: []
    op_pose2tf:
        input: "'op_pose2tf_topics.bag'"
        output: ['reset_time','tf']
    op_bag_player:
        input: "'op_bag_player_topics.bag'"
        output: ['ndt_pose','points_raw','image_raw']
    dp_planner:
        input: "'dp_planner_topics.bag'"
        output: ['local_trajectories_dynamic','enableLattice','final_waypoints','base_waypoints','closest_waypoint','current_behavior','global_plan_nodes','GlobalStartpose','GlobalGoalPose','global_plan_start','global_plan_goal','detected_polygons','dp_planner_tracked_boxes','local_trajectories','testing_line','behavior_state','safety_border','simu_points_cluster','sim_box_pose_ego']
    vehicle_receiver:
        input: "'vehicle_receiver_topics.bag'"
        output: ['can_info','mode_info']
    vehicle_sender:
        input: "'vehicle_sender_topics.bag'"
        output: []
    pc2_downsampler:
        input: "'pc2_downsampler_topics.bag'"
        output: ['downsampled_points_map','downsampled_points_raw']
    runtime_manager:
        input: "'runtime_manager_topics.bag'"
        output: ['from_rtmgr','accel_cmd','brake_cmd','gear_cmd','indicator_cmd','lamp_cmd','mode_cmd','steer_cmd','twist_cmd','traffic_light','config/adjust_xy','config/X_dpm','config/X_kf','config/X_fusion','config/lane_rule','config/lane_select','config/ndt','config/ndt_mapping','config/ndt_mapping_output','config/superimpose','config/twist_filter','config/velocity_set','config/waypoint_follower']
    sync_drivers/sync_drivers:
        input: "'sync_drivers/sync_drivers_topics.bag'"
        output: ['image_raw','points_raw','time_difference']
    synchronization/*/time_monitor:
        input: "'synchronization/*/time_monitor_topics.bag'"
        output: ['times']
    time_visualizer:
        input: "'time_visualizer_topics.bag'"
        output: []
    sync_obj_fusion/*/sync_*_fusion:
        input: "'sync_obj_fusion/*/sync_*_fusion_topics.bag'"
        output: ['sync_obj_fusion/*/obj_label','sync_obj_fusion/*/cluster_centroids','sync_obj_fusion/time_diff']
    sync_tracking/*/sync_*_tracking:
        input: "'sync_tracking/*/sync_*_tracking_topics.bag'"
        output: ['sync_tracking/*/image_obj_ranged','sync_tracking/*/image_raw','sync_tracking/time_diff']
    sync_reprojection/*/sync_*_reprojection:
        input: "'sync_reprojection/*/sync_*_reprojection_topics.bag'"
        output: ['sync_reprojection/*/image_obj_tracked','sync_reprojection/*/current_pose','sync_reprojection/time_diff']
    sync_tracking/*/sync_*_ranging:
        input: "'sync_tracking/*/sync_*_ranging_topics.bag'"
        output: ['sync_ranging/*/image_obj','sync_ranging/*/points_image','sync_ranging/time_diff']
    multi_lidar_calibrator:
        input: "'multi_lidar_calibrator_topics.bag'"
        output: ['points_calibrated']
    marker_downsampler:
        input: "'marker_downsampler_topics.bag'"
        output: ['downsampled_trajectory_circle_mark','downsampled_next_target_mark']
    tablet_receiver:
        input: "'tablet_receiver_topics.bag'"
        output: ['gear_cmd','mode_cmd','route_cmd','gnss_pose','gnss_stat']
    tablet_sender:
        input: "'tablet_sender_topics.bag'"
        output: []
    mqtt_receiver:
        input: "'mqtt_receiver_topics.bag'"
        output: ['remote_cmd']
    mqtt_pose_receiver:
        input: "'mqtt_pose_receiver_topics.bag'"
        output: ['current_pose']
    udon_receiver:
        input: "'udon_receiver_topics.bag'"
        output: []
    udon_sender:
        input: "'udon_sender_topics.bag'"
        output: []
    kitti_player:
        input: "'kitti_player_topics.bag'"
        output: ['grayscale/left/image_rect','grayscale/right/image_rect','color/left/image_rect','color/right/image_rect','hdl64e','oxts/gps','oxts/gps_initial','oxts/imu','preprocessed_disparity']
    kitti_box_publisher:
        input: "'kitti_box_publisher_topics.bag'"
        output: ['kitti_box','obj_car/image_obj','kitti_3d_labels','points_cluster']
    map_extender:
        input: "'map_extender_topics.bag'"
        output: ['extended_map']
    oculus_sender:
        input: "'oculus_sender_topics.bag'"
        output: []
    points2image:
        input: "'points2image_topics.bag'"
        output: ['points_image']
    points2vscan:
        input: "'points2vscan_topics.bag'"
        output: ['vscan_points','scan']
    vscan2image:
        input: "'vscan2image_topics.bag'"
        output: ['vscan_image']
    vscan2linelist:
        input: "'vscan2linelist_topics.bag'"
        output: ['vscan_linelist']
    pure_pursuit:
        input: 'rosbag2_pure_pursuit_topics'
        output: ['vehicle_vehicle_command','control_control_diagnostic']
        output_echo: ['vehicle/vehicle_command','control/control_diagnostic']
        node: ['pure_pursuit_nodes','pure_pursuit_node_exe','--ros-args','--remap','__ns:=/control','--remap','__node:=pure_pursuit_controller','--params-file','/home/saitama1/adehome/AutowareAuto/install/test_trajectory_following/share/test_trajectory_following/param/pure_pursuit_controller.param.yaml','--remap','current_pose:=/vehicle/vehicle_kinematic_state','--remap','trajectory:=/planning/trajectory','--remap','ctrl_cmd:=/vehicle/vehicle_command','--remap','ctrl_diag:=/control/control_diagnostic']
        data: ['long_accel_mps2','velocity_mps','front_wheel_angle_rad','rear_wheel_angle_rad']
        datatype: ['f','f','f','f']
        length: ['.16','','.20','.10']
        namespace: 'VehicleControlCommand'
        msg: 'autoware_auto_msgs'
    twist_filter:
        input: "'twist_filter_topics.bag'"
        output: ['twist_cmd']
    twist_gate:
        input: "'twist_gate_topics.bag'"
        output: ['emergency_stop','ctrl_mode','vehicle_cmd','state_cmd']
    wf_simulator:
        input: "'wf_simulator_topics.bag'"
        output: ['sim_pose','sim_velocity']
    vector_map_client:
        input: "'vector_map_client_topics.bag'"
        output: ['vector_map_client']
    vector_map_server:
        input: "'vector_map_server_topics.bag'"
        output: ['vector_map_server']
    points_map_loader:
        input: "'points_map_loader_topics.bag'"
        output: ['points_map','pmap_stat']
    vector_map_loader:
        input: "'vector_map_loader_topics.bag'"
        output: ['vector_map','vmap_stat','vector_map_info/*']
    grid_map_filter:
        input: "'grid_map_filter_topics.bag'"
        output: ['filtered_grid_map']
    laserscan2costmap:
        input: "'laserscan2costmap_topics.bag'"
        output: ['ring_ogm']
    points2costmap:
        input: "'points2costmap_topics.bag'"
        output: ['realtime_cost_map']
    potential_field:
        input: "'potential_field_topics.bag'"
        output: ['potential_field']
    wayarea2grid:
        input: "'wayarea2grid_topics.bag'"
        output: ['grid_map_wayarea','occupancy_wayarea']
    naive_motion_predict:
        input: "'naive_motion_predict_topics.bag'"
        output: ['prediction/objects']
    lidar_kf_contour_track:
        input: "'lidar_kf_contour_track_topics.bag'"
        output: ['detected_objects','detected_polygons','op_planner_tracked_boxes']
    pos_downloader:
        input: "'pos_downloader_topics.bag'"
        output: ['mo_pictograms']
    pos_uploader:
        input: "'pos_uploader_topics.bag'"
        output: []
    image_rectifier*:
        input: "'image_rectifier*_topics.bag'"
        output: ['image_rectified']
    image_rotator*:
        input: "'image_rotator*_topics.bag'"
        output: ['image_rotated']
    can_uploader:
        input: "'can_uploader_topics.bag'"
        output: []
    obj_downloader:
        input: "'obj_downloader_topics.bag'"
        output: ['mo_pictograms']
    obj_uploader:
        input: "'obj_uploader_topics.bag'"
        output: []
    local2global:
        input: "'local2global_topics.bag'"
        output: ['current_pose','ndt_map']
    ndt_mapping:
        input: "'ndt_mapping_topics.bag'"
        output: ['ndt_map','current_pose']
    queue_counter:
        input: "'queue_counter_topics.bag'"
        output: []
    ndt_matching:
        input: 'rosbag2_ndt_matching_topics'
        output: ['localization_ndt_map','lidar_front_points_filtered_downsampled','localization_ndt_pose']
        output_echo: ['localization/ndt_map','lidar_front/points_filtered_downsampled','localization/ndt_pose']
        node: ['ndt_nodes','p2d_ndt_localizer_exe', '__params:=/home/takano/adehome/AutowareAuto/install/autoware_demos/share/autoware_demos/param/autoware_academy_demo/ndt_localizer.param.yaml','points_in:=/lidar_front/points_filtered_downsampled','__ns:=/localization']
    icp_matching:
        input: "'icp_matching_topics.bag'"
        output: ['predict_pose','icp_pose','localizer_pose','estimate_twist','estimated_vel_mps','estimated_vel_kmph','estimated_vel','time_icp_matching','icp_stat']
    fix2tfpose:
        input: "'fix2tfpose_topics.bag'"
        output: ['gnss_pose','gnss_stat']
    nmea2tfpose:
        input: "'nmea2tfpose_topics.bag'"
        output: ['gnss_pose']
    cloud_transformer:
        input: "'cloud_transformer_topics.bag'"
        output: ['points_transformed']
    points_concat_filter:
        input: "'points_concat_filter_topics.bag'"
        output: ['points_concat']
    ray_ground_filter:
        input: "'ray_ground_filter_topics.bag'"
        output: ['points_no_ground','points_ground']
    ring_ground_filter:
        input: "'ring_ground_filter_topics.bag'"
        output: ['points_no_ground','points_ground']
    space_filter:
        input: "'space_filter_topics.bag'"
        output: ['points_clipped']
    compare_map_filter:
        input: "'compare_map_filter_topics.bag'"
        output: ['points_ground','points_no_ground']
    vision_darknet_detect:
        input: "'vision_darknet_detect_topics.bag'"
        output: ['detected_objects']
    occupancy_processor_01:
        input: "'occupancy_processor_01_topics.bag'"
        output: ['gridmap_road_status','occupancy_road_status']
    dpm_ocv:
        input: "'dpm_ocv_topics.bag'"
        output: ['obj_X/image_obj']
    dpm_ttic:
        input: "'dpm_ttic_topics.bag'"
        output: ['obj_X/image_obj']
    kf_track:
        input: "'kf_track_topics.bag'"
        output: ['obj_X/image_obj_tracked']
    klt_track:
        input: "'klt_track_topics.bag'"
        output: ['obj_X/image_obj_tracked']
    obj_reproj:
        input: "'obj_reproj_topics.bag'"
        output: ['obj_X/obj_label','obj_X/obj_label_marker']
    range_fusion:
        input: "'range_fusion_topics.bag'"
        output: ['obj_X/image_obj_ranged']
    feature_projection:
        input: "'feature_projection_topics.bag'"
        output: ['roi_signal']
    traffic_light_recognition:
        input: "'traffic_light_recognition_topics.bag'"
        output: ['camera_light_color','sound_player','tlr_result','tlr_superimpose_image','tlr_result_array']
    region_tlr_mxnet:
        input: "'region_tlr_mxnet_topics.bag'"
        output: ['light_color','sound_player','tlr_result','tlr_superimpose_image']
    region_tlr_ssd:
        input: "'region_tlr_ssd_topics.bag'"
        output: ['light_color','sound_player','tlr_result','tlr_superimpose_image']
    roi_extractor:
        input: "'roi_extractor_topics.bag'"
        output: []
    light_color_switch:
        input: "'light_color_switch_topics.bag'"
        output: ['light_color']
    tlr_tuner:
        input: "'tlr_tuner_topics.bag'"
        output: ['tuned_result']
    can_info_translator:
        input: "'can_info_translator_topics.bag'"
        output: ['can_velocity','linear_velocity_viz','odom_pose']
    lidar_euclidean_cluster_detect:
        input: "'lidar_euclidean_cluster_detect_topics.bag'"
        output: ['detection/lidar_objects/l_shaped']
    lidar_euclidean_cluster_detect:
        input: "'lidar_euclidean_cluster_detect_topics.bag'"
        output: ['bounding_boxes','centroid_marker','cloud_clusters','cluster_centroids','detection/lidar_detector/objects_hulls','detection/lidar_detector/objects_markers','grid_map_wayarea','points_cluster','points_ground','points_lanes']
    line_ocv:
        input: "'line_ocv_topics.bag'"
        output: ['lane_pos_xy']
    lidar_fake_percetion:
        input: "'lidar_fake_percetion_topics.bag'"
        output: ['fake_objects','fake_points']
    distance_filter:
        input: "'distance_filter_topics.bag'"
        output: ['filtered_points','points_downsampler_info']
    random_filter:
        input: "'random_filter_topics.bag'"
        output: ['filtered_points','points_downsampler_info']
    ring_filter:
        input: "'ring_filter_topics.bag'"
        output: ['filtered_points','points_downsampler_info']
    voxel_grid_filter:
        input: "'voxel_grid_filter_topics.bag'"
        output: ['filtered_points','points_downsampler_info']
    g30esli_interface:
        input: "'g30esli_interface_topics.bag'"
        output: ['vehicle/battery','vehicle/twist','vehicle_status']
    pacmod_interface:
        input: "'pacmod_interface_topics.bag'"
        output: ['as/arbitrated_steering_commands','as/arbitrated_speed_commands','as_current_twist']
    imu:
        input: "'imu_topics.bag'"
        output: ['data_raw']
    adxl345_node:
        input: "'adxl345_node_topics.bag'"
        output: ['data_raw']
    microstrain_3dm_gx5_15:
        input: "'microstrain_3dm_gx5_15_topics.bag'"
        output: ['gps/fix','imu_raw','nav/odom','nav/status']
    microstrain_3dm_gx5_45_node:
        input: "'microstrain_3dm_gx5_45_node_topics.bag'"
        output: ['gps/fix','imu_raw','nav/odom','nav/status']
    vg440_node:
        input: "'vg440_node_topics.bag'"
        output: ['imu_raw']
    vlg22c:
        input: "'vlg22c_topics.bag'"
        output: ['camera/*/image_raw']
    grasshopper3:
        input: "'grasshopper3_topics.bag'"
        output: ['camera/camera_info','camera/image_raw']
    ladybug:
        input: "'ladybug_topics.bag'"
        output: ['camera/camera_info','camera/image_raw']
    gmsl_camera_interface:
        input: "'gmsl_camera_interface_topics.bag'"
        output: ['image_raw']
    driveworks_tensorrt_interface:
        input: "'driveworks_tensorrt_interface_topics.bag'"
        output: ['obj_car/image_obj']
    vectacam:
        input: "'vectacam_topics.bag'"
        output: ['camera/image_raw','image_raw']
    javad_serial_driver:
        input: "'javad_serial_driver_topics.bag'"
        output: []
    javad_topic_driver:
        input: "'javad_topic_driver_topics.bag'"
        output: []
    javad_topic_serial_reader:
        input: "'javad_topic_serial_reader_topics.bag'"
        output: ['nmea_sentence']
    hokuyo_3d:
        input: "'hokuyo_3d_topics.bag'"
        output: ['points_raw','imu','mag']
    mtdevice:
        input: "'mtdevice_topics.bag'"
        output: []
    mtnode:
        input: "'mtnode_topics.bag'"
        output: ['imu_raw','mti/sensor/sample','mti/sensor/magnetic','mti/sensor/pressure','mti/sensor/gnssPvt','mti/filter/orientation','mti/filter/velocity','mti/filter/position','temperature']
    garmin_gps_18x_lvc:
        input: "'garmin_gps_18x_lvc_topics.bag'"
        output: ['nmea_sentence','gpstime']
    can_converter:
        input: "'can_converter_topics.bag'"
        output: []
    can_draw:
        input: "'can_draw_topics.bag'"
        output: ['can_status']
    can_listener:
        input: "'can_listener_topics.bag'"
        output: ['can_raw']
